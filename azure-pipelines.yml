variables:
  dockerVersion: '19.03.5'
  dotnetVersion: '3.1.101'

trigger:
- master
- development

pr:
- master
- development

pool:
  vmImage: windows-2019

jobs:
- job: build
  displayName: Build database project

  steps:
  - task: VSBuild@1
    displayName: 'Build database solution'
    inputs:
      solution: src/NHSD.BuyingCatalogue.Ordering.OrderingDatabase/NHSD.BuyingCatalogue.Ordering.OrderingDatabase.sqlproj

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)/database'
    inputs:
      SourceFolder: src
      Contents: '**\*.dacpac'
      TargetFolder: '$(build.artifactstagingdirectory)/database'
      CleanTargetFolder: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: database'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)/database'
      ArtifactName: database

  - task: colinsalmcorner.colinsalmcorner-buildtasks.dacpac-report-task.DacPacReport@1
    displayName: 'DacPac Schema Compare NHSD.BuyingCatalogue.Ordering.OrderingDatabase.dacpac'
    inputs:
      dropName: database
      dacpacName: NHSD.BuyingCatalogue.Ordering.OrderingDatabase
      targetDacPacPath: '$(build.artifactstagingdirectory)/database'
    enabled: false

- job: dockerBuildAndPush
  displayName: Run Unit & Integration tests and build & push docker containers to the acr

  pool:
    vmImage: 'ubuntu-latest'

  steps:

  - task: UseDotNet@2
    displayName: 'Use DotNet Core $(dotnetVersion)'
    inputs:
      version: $(dotnetVersion)
      includePreviewVersions: false

  - task: DockerInstaller@0
    inputs:
      dockerVersion: $(dockerVersion)

  - script: docker-compose up --build -d
    displayName: 'Docker up'

  - task: DotNetCoreCLI@2
    displayName: 'Run unit tests'
    inputs:
      command: test
      projects: '**/*UnitTests.csproj'
      arguments: '-v n  --collect "Code coverage"'
    
  - task: DotNetCoreCLI@2
    displayName: 'Run Integration tests'
    inputs:
      command: test
      projects: '**/*IntegrationTests.csproj'
      arguments: '-v n'

  - script: docker-compose down -v
    displayName: 'Docker down'

  - task: DockerCompose@0
    displayName: 'Build: Dev'
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
      azureContainerRegistry: '{"loginServer":"gpitfuturesdevacr.azurecr.io", "id" : "/subscriptions/7b12a8a2-f06f-456f-b6f9-aa2d92e0b2ec/resourceGroups/gpitfutures-dev-rg-acr/providers/Microsoft.ContainerRegistry/registries/gpitfuturesdevacr"}'
      dockerComposeFile: '**/docker-compose-build.yml'
      action: 'Build services'
      additionalImageTags: '$(Build.BuildNumber)'
      includeSourceTags: true

  - task: DockerCompose@0
    displayName: 'Push: Dev'
    condition: and(succeeded(), ne(variables['build.reason'], 'PullRequest'))
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
      azureContainerRegistry: '{"loginServer":"gpitfuturesdevacr.azurecr.io", "id" : "/subscriptions/7b12a8a2-f06f-456f-b6f9-aa2d92e0b2ec/resourceGroups/gpitfutures-dev-rg-acr/providers/Microsoft.ContainerRegistry/registries/gpitfuturesdevacr"}'
      dockerComposeFile: '**/docker-compose-build.yml'
      action: 'Push services'
      additionalImageTags: '$(Build.BuildNumber)'
      includeSourceTags: true

  - task: DockerCompose@0
    displayName: 'Build: Test'
    condition: and(succeeded(), ne(variables['build.reason'], 'PullRequest'))
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
      azureContainerRegistry: '{"loginServer":"gpitfuturestestacr.azurecr.io", "id" : "/subscriptions/7b12a8a2-f06f-456f-b6f9-aa2d92e0b2ec/resourceGroups/gpitfutures-test-rg-acr/providers/Microsoft.ContainerRegistry/registries/gpitfuturestestacr"}'
      dockerComposeFile: '**/docker-compose-build.yml'
      action: 'Build services'
      additionalImageTags: '$(Build.BuildNumber)'
      includeSourceTags: true

  - task: DockerCompose@0
    displayName: 'Push: Test'
    condition: and(succeeded(), ne(variables['build.reason'], 'PullRequest'))
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
      azureContainerRegistry: '{"loginServer":"gpitfuturestestacr.azurecr.io", "id" : "/subscriptions/7b12a8a2-f06f-456f-b6f9-aa2d92e0b2ec/resourceGroups/gpitfutures-test-rg-acr/providers/Microsoft.ContainerRegistry/registries/gpitfuturestestacr"}'
      dockerComposeFile: '**/docker-compose-build.yml'
      action: 'Push services'
      additionalImageTags: '$(Build.BuildNumber)'
      includeSourceTags: true

  - task: DockerCompose@0
    displayName: 'Build: Prod'
    condition: and(succeeded(), ne(variables['build.reason'], 'PullRequest'))
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'NHSAPP-BuyingCatalogue (Prod)'
      azureContainerRegistry: '{"loginServer":"gpitfuturesprodacr.azurecr.io", "id" : "/subscriptions/d1be8dbc-1a9f-4b7b-ba51-037116110e00/resourceGroups/gpitfutures-prod-rg-acr/providers/Microsoft.ContainerRegistry/registries/gpitfuturesprodacr"}'
      dockerComposeFile: '**/docker-compose-build.yml'
      action: 'Build services'
      additionalImageTags: '$(Build.BuildNumber)'
      includeSourceTags: true
    enabled: false

  - task: DockerCompose@0
    displayName: 'Push: Prod'
    condition: and(succeeded(), ne(variables['build.reason'], 'PullRequest'))
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'NHSAPP-BuyingCatalogue (Prod)'
      azureContainerRegistry: '{"loginServer":"gpitfuturesprodacr.azurecr.io", "id" : "/subscriptions/d1be8dbc-1a9f-4b7b-ba51-037116110e00/resourceGroups/gpitfutures-prod-rg-acr/providers/Microsoft.ContainerRegistry/registries/gpitfuturesprodacr"}'
      dockerComposeFile: '**/docker-compose-build.yml'
      action: 'Push services'
      additionalImageTags: '$(Build.BuildNumber)'
      includeSourceTags: true
    enabled: false
    